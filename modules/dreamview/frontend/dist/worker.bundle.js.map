{"version":3,"file":"worker.bundle.js","mappings":"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","sources":["webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/codegen/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/fetch/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/path/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/protobufjs/light.js","webpack:///../node_modules/protobufjs/src/converter.js","webpack:///../node_modules/protobufjs/src/decoder.js","webpack:///../node_modules/protobufjs/src/encoder.js","webpack:///../node_modules/protobufjs/src/enum.js","webpack:///../node_modules/protobufjs/src/field.js","webpack:///../node_modules/protobufjs/src/index-light.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/protobufjs/src/mapfield.js","webpack:///../node_modules/protobufjs/src/message.js","webpack:///../node_modules/protobufjs/src/method.js","webpack:///../node_modules/protobufjs/src/namespace.js","webpack:///../node_modules/protobufjs/src/object.js","webpack:///../node_modules/protobufjs/src/oneof.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/root.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/service.js","webpack:///../node_modules/protobufjs/src/type.js","webpack:///../node_modules/protobufjs/src/types.js","webpack:///../node_modules/protobufjs/src/util.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../node_modules/protobufjs/src/verifier.js","webpack:///../node_modules/protobufjs/src/wrappers.js","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///./utils/webworker.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    OneOf    = require(\"./oneof\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace || object instanceof OneOf))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const protobuf = require('protobufjs/light');\nconst simWorldRoot = protobuf.Root.fromJSON(\n  require('proto_bundle/sim_world_proto_bundle.json'),\n);\n\nconst SimWorldMessage = simWorldRoot.lookupType('apollo.dreamview.SimulationWorld');\nconst mapMessage = simWorldRoot.lookupType('apollo.hdmap.Map');\nconst cameraMessage = simWorldRoot.lookupType('apollo.dreamview.CameraUpdate');\nconst pointCloudRoot = protobuf.Root.fromJSON(\n  require('proto_bundle/point_cloud_proto_bundle.json'),\n);\n\nconst pointCloudMessage = pointCloudRoot.lookupType('apollo.dreamview.PointCloud');\n\nself.addEventListener('message', (event) => {\n  let message = null;\n  const data = event.data.data;\n  switch (event.data.source) {\n    case 'realtime':\n      if (typeof data === 'string') {\n        message = JSON.parse(data);\n      } else {\n        message = SimWorldMessage.toObject(\n          SimWorldMessage.decode(new Uint8Array(data)),\n          { enums: String },\n        );\n        message.type = 'SimWorldUpdate';\n      }\n      break;\n    case 'map':\n      message = mapMessage.toObject(\n        mapMessage.decode(new Uint8Array(data)),\n        { enums: String },\n      );\n      message.type = 'MapData';\n      break;\n    case 'point_cloud':\n      if (typeof data === 'string') {\n        message = JSON.parse(data);\n      } else {\n        message = pointCloudMessage.toObject(\n          pointCloudMessage.decode(new Uint8Array(data)), { arrays: true },\n        );\n      }\n      break;\n    case 'camera':\n      message = cameraMessage.toObject(\n        cameraMessage.decode(new Uint8Array(data)), { enums: String },\n      );\n      message.type = 'CameraData';\n      break;\n    case 'teleop':\n      if (typeof data === 'string') {\n        message = JSON.parse(data);\n      }\n      break;\n    default:\n      console.error('Unknown data source found:', event.data.source);\n      break;\n  }\n\n  if (message) {\n    self.postMessage(message);\n  }\n});\n"],"names":["module","exports","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","resolvedType","values","repeated","typeDefault","fullName","isUnsigned","type","genValuePartial_toObject","fromObject","mtype","fields","fieldsArray","name","safeProp","map","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","long","low","high","unsigned","toNumber","bytes","arrayDefault","hasKs2","_fieldsArray","indexOf","filter","group","ref","id","types","defaults","keyType","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","create","constructor","className","Namespace","comment","comments","TypeError","reserved","fromJSON","json","enm","toJSON","toJSONOptions","keepComments","Boolean","add","isString","isInteger","isReservedId","isReservedName","allow_alias","remove","Field","Type","ruleRe","rule","extend","isObject","toLowerCase","message","defaultValue","Long","extensionField","declaringField","_packed","defineProperty","get","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","fromNumber","freeze","newBuffer","emptyObject","emptyArray","ctor","d","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","_configure","Type_","protobuf","build","load","root","Root","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","writer","encodeDelimited","reader","decodeDelimited","verify","object","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","lookupType","arrayToJSON","array","obj","nested","_nestedArray","clearCache","namespace","addJSON","toArray","nestedArray","nestedJson","names","methods","getEnum","prev","setOptions","onAdd","onRemove","define","isArray","ptr","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupService","Service_","Enum_","defineProperties","unshift","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","hasOwnProperty","newValue","setProperty","newOpt","Root_","fieldNames","oneof","addFieldsToParent","oneofName","oneOfGetter","set","oneOfSetter","LongBits","indexOutOfRange","writeLength","RangeError","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skip","skipType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","parse","common","deferred","files","SYNC","resolvePath","self","sync","finish","cb","getBundledFileName","idx","lastIndexOf","altname","substring","process","parsed","imports","weakImports","queued","weak","setTimeout","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","endedByRPC","_methodsArray","service","inherited","methodsArray","rpcService","methodName","lcFirst","isReserved","m","q","s","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","target","bake","o","key","safePropBackslashRe","safePropQuoteRe","ucFirst","str","toUpperCase","camelCaseRe","camelCase","a","decorateRoot","enumerable","decorateEnumIndex","dst","setProp","prevValue","concat","zero","zzEncode","zeroHash","from","parseInt","fromString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","src","newError","CustomError","captureStackTrace","stack","pool","g","versions","node","global","window","isFinite","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","encoding","allocUnsafe","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","expected","type_url","substr","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","simWorldRoot","SimWorldMessage","mapMessage","cameraMessage","pointCloudMessage","require","addEventListener","event","data","arrays","error","postMessage"],"sourceRoot":""}