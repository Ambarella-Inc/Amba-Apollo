## Auto generated by `proto_build_generator.py`
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")
load("//tools:python_rules.bzl", "py_proto_library")

package(default_visibility = ["//visibility:public"])

cc_proto_library(
    name = "lidar_detection_config_cc_proto",
    deps = [
        ":lidar_detection_config_proto",
    ],
)

proto_library(
    name = "lidar_detection_config_proto",
    srcs = ["lidar_detection_config.proto"],
)

py_proto_library(
    name = "lidar_detection_config_py_pb2",
    deps = [
        ":lidar_detection_config_proto",
    ],
)

cc_proto_library(
    name = "lane_detection_config_cc_proto",
    deps = [
        ":lane_detection_config_proto",
    ],
)

proto_library(
    name = "lane_detection_config_proto",
    srcs = ["lane_detection_config.proto"],
)

py_proto_library(
    name = "lane_detection_config_py_pb2",
    deps = [
        ":lane_detection_config_proto",
    ],
)

cc_proto_library(
    name = "pipeline_config_cc_proto",
    deps = [
        ":pipeline_config_proto",
    ],
)

proto_library(
    name = "pipeline_config_proto",
    srcs = ["pipeline_config.proto"],
    deps = [
        ":camera_detection_config_proto",
        ":lane_detection_config_proto",
        ":lidar_detection_config_proto",
        ":traffic_light_config_proto",
        "//modules/perception/pipeline/proto/plugin:camera_get_object_config_proto",
        "//modules/perception/pipeline/proto/plugin:ccrf_type_fusion_config_proto",
        "//modules/perception/pipeline/proto/plugin:filter_bbox_config_proto",
        "//modules/perception/pipeline/proto/plugin:get_image_data_config_proto",
        "//modules/perception/pipeline/proto/plugin:multi_lidar_fusion_config_proto",
        "//modules/perception/pipeline/proto/plugin:pbf_gatekeeper_config_proto",
        "//modules/perception/pipeline/proto/plugin:pointcloud_downsample_config_proto",
        "//modules/perception/pipeline/proto/plugin:pointcloud_get_objects_config_proto",
        "//modules/perception/pipeline/proto/plugin:recover_bbox_config_proto",
        "//modules/perception/pipeline/proto/plugin:resize_and_normalize_config_proto",
        "//modules/perception/pipeline/proto/plugin:roi_boundary_filter_config_proto",
        "//modules/perception/pipeline/proto/stage:all_latest_fusion_config_proto",
        "//modules/perception/pipeline/proto/stage:bev_obstacle_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:caddn_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:camera_detection_postprocessor_config_proto",
        "//modules/perception/pipeline/proto/stage:camera_detection_preprocessor_config_proto",
        "//modules/perception/pipeline/proto/stage:camera_detector_config_proto",
        "//modules/perception/pipeline/proto/stage:center_point_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:cnnseg_config_proto",
        "//modules/perception/pipeline/proto/stage:darkSCNN_postprocessor_proto",
        "//modules/perception/pipeline/proto/stage:darkSCNN_proto",
        "//modules/perception/pipeline/proto/stage:denseline_postprocessor_proto",
        "//modules/perception/pipeline/proto/stage:denseline_proto",
        "//modules/perception/pipeline/proto/stage:detection_proto",
        "//modules/perception/pipeline/proto/stage:fused_classifier_config_proto",
        "//modules/perception/pipeline/proto/stage:ground_service_detector_config_proto",
        "//modules/perception/pipeline/proto/stage:hdmap_roi_filter_config_proto",
        "//modules/perception/pipeline/proto/stage:location_refiner_proto",
        "//modules/perception/pipeline/proto/stage:map_manager_config_proto",
        "//modules/perception/pipeline/proto/stage:mask_pillars_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:mlf_engine_config_proto",
        "//modules/perception/pipeline/proto/stage:multicue_proto",
        "//modules/perception/pipeline/proto/stage:ncut_config_proto",
        "//modules/perception/pipeline/proto/stage:object_builder_config_proto",
        "//modules/perception/pipeline/proto/stage:object_filter_bank_config_proto",
        "//modules/perception/pipeline/proto/stage:omt_bev_proto",
        "//modules/perception/pipeline/proto/stage:omt_proto",
        "//modules/perception/pipeline/proto/stage:pbf_tracker_config_proto",
        "//modules/perception/pipeline/proto/stage:point_pillars_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:pointcloud_detection_postprocessor_config_proto",
        "//modules/perception/pipeline/proto/stage:pointcloud_detection_preprocessor_config_proto",
        "//modules/perception/pipeline/proto/stage:pointcloud_preprocessor_config_proto",
        "//modules/perception/pipeline/proto/stage:probabilistic_fusion_config_proto",
        "//modules/perception/pipeline/proto/stage:recognition_proto",
        "//modules/perception/pipeline/proto/stage:semantic_proto",
        "//modules/perception/pipeline/proto/stage:singlestage_proto",
        "//modules/perception/pipeline/proto/stage:smoke_obstacle_detection_config_proto",
        "//modules/perception/pipeline/proto/stage:spatio_temporal_ground_detector_config_proto",
        "//modules/perception/pipeline/proto/stage:yolo_obstacle_detector_config_proto",
    ],
)

py_proto_library(
    name = "pipeline_config_py_pb2",
    deps = [
        ":camera_detection_config_py_pb2",
        ":lane_detection_config_py_pb2",
        ":lidar_detection_config_py_pb2",
        ":pipeline_config_proto",
        ":traffic_light_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:camera_get_object_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:ccrf_type_fusion_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:filter_bbox_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:get_image_data_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:multi_lidar_fusion_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:pbf_gatekeeper_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:pointcloud_downsample_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:pointcloud_get_objects_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:recover_bbox_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:resize_and_normalize_config_py_pb2",
        "//modules/perception/pipeline/proto/plugin:roi_boundary_filter_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:all_latest_fusion_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:bev_obstacle_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:caddn_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:camera_detection_postprocessor_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:camera_detection_preprocessor_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:camera_detector_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:center_point_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:cnnseg_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:darkSCNN_postprocessor_py_pb2",
        "//modules/perception/pipeline/proto/stage:darkSCNN_py_pb2",
        "//modules/perception/pipeline/proto/stage:denseline_postprocessor_py_pb2",
        "//modules/perception/pipeline/proto/stage:denseline_py_pb2",
        "//modules/perception/pipeline/proto/stage:detection_py_pb2",
        "//modules/perception/pipeline/proto/stage:fused_classifier_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:ground_service_detector_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:hdmap_roi_filter_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:location_refiner_py_pb2",
        "//modules/perception/pipeline/proto/stage:map_manager_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:mask_pillars_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:mlf_engine_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:multicue_py_pb2",
        "//modules/perception/pipeline/proto/stage:ncut_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:object_builder_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:object_filter_bank_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:omt_bev_py_pb2",
        "//modules/perception/pipeline/proto/stage:omt_py_pb2",
        "//modules/perception/pipeline/proto/stage:pbf_tracker_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:point_pillars_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:pointcloud_detection_postprocessor_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:pointcloud_detection_preprocessor_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:pointcloud_preprocessor_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:probabilistic_fusion_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:recognition_py_pb2",
        "//modules/perception/pipeline/proto/stage:semantic_py_pb2",
        "//modules/perception/pipeline/proto/stage:singlestage_py_pb2",
        "//modules/perception/pipeline/proto/stage:smoke_obstacle_detection_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:spatio_temporal_ground_detector_config_py_pb2",
        "//modules/perception/pipeline/proto/stage:yolo_obstacle_detector_config_py_pb2",
    ],
)

cc_proto_library(
    name = "camera_detection_config_cc_proto",
    deps = [
        ":camera_detection_config_proto",
    ],
)

proto_library(
    name = "camera_detection_config_proto",
    srcs = ["camera_detection_config.proto"],
)

py_proto_library(
    name = "camera_detection_config_py_pb2",
    deps = [
        ":camera_detection_config_proto",
    ],
)

cc_proto_library(
    name = "traffic_light_config_cc_proto",
    deps = [
        ":traffic_light_config_proto",
    ],
)

proto_library(
    name = "traffic_light_config_proto",
    srcs = ["traffic_light_config.proto"],
)

py_proto_library(
    name = "traffic_light_config_py_pb2",
    deps = [
        ":traffic_light_config_proto",
    ],
)
