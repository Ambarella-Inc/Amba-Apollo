## Auto generated by `proto_build_generator.py`
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")
load("//tools:python_rules.bzl", "py_proto_library")

package(default_visibility = ["//visibility:public"])

cc_proto_library(
    name = "smoke_obstacle_detection_config_cc_proto",
    deps = [
        ":smoke_obstacle_detection_config_proto",
    ],
)

proto_library(
    name = "smoke_obstacle_detection_config_proto",
    srcs = ["smoke_obstacle_detection_config.proto"],
)

py_proto_library(
    name = "smoke_obstacle_detection_config_py_pb2",
    deps = [
        ":smoke_obstacle_detection_config_proto",
    ],
)

cc_proto_library(
    name = "spatio_temporal_ground_detector_config_cc_proto",
    deps = [
        ":spatio_temporal_ground_detector_config_proto",
    ],
)

proto_library(
    name = "spatio_temporal_ground_detector_config_proto",
    srcs = ["spatio_temporal_ground_detector_config.proto"],
)

py_proto_library(
    name = "spatio_temporal_ground_detector_config_py_pb2",
    deps = [
        ":spatio_temporal_ground_detector_config_proto",
    ],
)

cc_proto_library(
    name = "ncut_config_cc_proto",
    deps = [
        ":ncut_config_proto",
    ],
)

proto_library(
    name = "ncut_config_proto",
    srcs = ["ncut_config.proto"],
)

py_proto_library(
    name = "ncut_config_py_pb2",
    deps = [
        ":ncut_config_proto",
    ],
)

cc_proto_library(
    name = "fused_classifier_config_cc_proto",
    deps = [
        ":fused_classifier_config_proto",
    ],
)

proto_library(
    name = "fused_classifier_config_proto",
    srcs = ["fused_classifier_config.proto"],
)

py_proto_library(
    name = "fused_classifier_config_py_pb2",
    deps = [
        ":fused_classifier_config_proto",
    ],
)

cc_proto_library(
    name = "ground_service_detector_config_cc_proto",
    deps = [
        ":ground_service_detector_config_proto",
    ],
)

proto_library(
    name = "ground_service_detector_config_proto",
    srcs = ["ground_service_detector_config.proto"],
)

py_proto_library(
    name = "ground_service_detector_config_py_pb2",
    deps = [
        ":ground_service_detector_config_proto",
    ],
)

cc_proto_library(
    name = "darkSCNN_postprocessor_cc_proto",
    deps = [
        ":darkSCNN_postprocessor_proto",
    ],
)

proto_library(
    name = "darkSCNN_postprocessor_proto",
    srcs = ["darkSCNN_postprocessor.proto"],
)

py_proto_library(
    name = "darkSCNN_postprocessor_py_pb2",
    deps = [
        ":darkSCNN_postprocessor_proto",
    ],
)

cc_proto_library(
    name = "omt_cc_proto",
    deps = [
        ":omt_proto",
    ],
)

proto_library(
    name = "omt_proto",
    srcs = ["omt.proto"],
)

py_proto_library(
    name = "omt_py_pb2",
    deps = [
        ":omt_proto",
    ],
)

cc_proto_library(
    name = "camera_detector_config_cc_proto",
    deps = [
        ":camera_detector_config_proto",
    ],
)

proto_library(
    name = "camera_detector_config_proto",
    srcs = ["camera_detector_config.proto"],
)

py_proto_library(
    name = "camera_detector_config_py_pb2",
    deps = [
        ":camera_detector_config_proto",
    ],
)

cc_proto_library(
    name = "point_pillars_detection_config_cc_proto",
    deps = [
        ":point_pillars_detection_config_proto",
    ],
)

proto_library(
    name = "point_pillars_detection_config_proto",
    srcs = ["point_pillars_detection_config.proto"],
)

py_proto_library(
    name = "point_pillars_detection_config_py_pb2",
    deps = [
        ":point_pillars_detection_config_proto",
    ],
)

cc_proto_library(
    name = "darkSCNN_cc_proto",
    deps = [
        ":darkSCNN_proto",
    ],
)

proto_library(
    name = "darkSCNN_proto",
    srcs = ["darkSCNN.proto"],
)

py_proto_library(
    name = "darkSCNN_py_pb2",
    deps = [
        ":darkSCNN_proto",
    ],
)

cc_proto_library(
    name = "probabilistic_fusion_config_cc_proto",
    deps = [
        ":probabilistic_fusion_config_proto",
    ],
)

proto_library(
    name = "probabilistic_fusion_config_proto",
    srcs = ["probabilistic_fusion_config.proto"],
)

py_proto_library(
    name = "probabilistic_fusion_config_py_pb2",
    deps = [
        ":probabilistic_fusion_config_proto",
    ],
)

cc_proto_library(
    name = "object_builder_config_cc_proto",
    deps = [
        ":object_builder_config_proto",
    ],
)

proto_library(
    name = "object_builder_config_proto",
    srcs = ["object_builder_config.proto"],
)

py_proto_library(
    name = "object_builder_config_py_pb2",
    deps = [
        ":object_builder_config_proto",
    ],
)

cc_proto_library(
    name = "recognition_cc_proto",
    deps = [
        ":recognition_proto",
    ],
)

proto_library(
    name = "recognition_proto",
    srcs = ["recognition.proto"],
)

py_proto_library(
    name = "recognition_py_pb2",
    deps = [
        ":recognition_proto",
    ],
)

cc_proto_library(
    name = "pointcloud_detection_postprocessor_config_cc_proto",
    deps = [
        ":pointcloud_detection_postprocessor_config_proto",
    ],
)

proto_library(
    name = "pointcloud_detection_postprocessor_config_proto",
    srcs = ["pointcloud_detection_postprocessor_config.proto"],
)

py_proto_library(
    name = "pointcloud_detection_postprocessor_config_py_pb2",
    deps = [
        ":pointcloud_detection_postprocessor_config_proto",
    ],
)

cc_proto_library(
    name = "pbf_tracker_config_cc_proto",
    deps = [
        ":pbf_tracker_config_proto",
    ],
)

proto_library(
    name = "pbf_tracker_config_proto",
    srcs = ["pbf_tracker_config.proto"],
)

py_proto_library(
    name = "pbf_tracker_config_py_pb2",
    deps = [
        ":pbf_tracker_config_proto",
    ],
)

cc_proto_library(
    name = "map_manager_config_cc_proto",
    deps = [
        ":map_manager_config_proto",
    ],
)

proto_library(
    name = "map_manager_config_proto",
    srcs = ["map_manager_config.proto"],
)

py_proto_library(
    name = "map_manager_config_py_pb2",
    deps = [
        ":map_manager_config_proto",
    ],
)

cc_proto_library(
    name = "location_refiner_cc_proto",
    deps = [
        ":location_refiner_proto",
    ],
)

proto_library(
    name = "location_refiner_proto",
    srcs = ["location_refiner.proto"],
)

py_proto_library(
    name = "location_refiner_py_pb2",
    deps = [
        ":location_refiner_proto",
    ],
)

cc_proto_library(
    name = "cnnseg_config_cc_proto",
    deps = [
        ":cnnseg_config_proto",
    ],
)

proto_library(
    name = "cnnseg_config_proto",
    srcs = ["cnnseg_config.proto"],
)

py_proto_library(
    name = "cnnseg_config_py_pb2",
    deps = [
        ":cnnseg_config_proto",
    ],
)

cc_proto_library(
    name = "bev_detection_config_cc_proto",
    deps = [
        ":bev_detection_config_proto",
    ],
)

proto_library(
    name = "bev_detection_config_proto",
    srcs = ["bev_detection_config.proto"],
)

py_proto_library(
    name = "bev_detection_config_py_pb2",
    deps = [
        ":bev_detection_config_proto",
    ],
)

cc_proto_library(
    name = "denseline_cc_proto",
    deps = [
        ":denseline_proto",
    ],
)

proto_library(
    name = "denseline_proto",
    srcs = ["denseline.proto"],
)

py_proto_library(
    name = "denseline_py_pb2",
    deps = [
        ":denseline_proto",
    ],
)

cc_proto_library(
    name = "caddn_detection_config_cc_proto",
    deps = [
        ":caddn_detection_config_proto",
    ],
)

proto_library(
    name = "caddn_detection_config_proto",
    srcs = ["caddn_detection_config.proto"],
)

py_proto_library(
    name = "caddn_detection_config_py_pb2",
    deps = [
        ":caddn_detection_config_proto",
    ],
)

cc_proto_library(
    name = "pointcloud_detection_preprocessor_config_cc_proto",
    deps = [
        ":pointcloud_detection_preprocessor_config_proto",
    ],
)

proto_library(
    name = "pointcloud_detection_preprocessor_config_proto",
    srcs = ["pointcloud_detection_preprocessor_config.proto"],
)

py_proto_library(
    name = "pointcloud_detection_preprocessor_config_py_pb2",
    deps = [
        ":pointcloud_detection_preprocessor_config_proto",
    ],
)

cc_proto_library(
    name = "semantic_cc_proto",
    deps = [
        ":semantic_proto",
    ],
)

proto_library(
    name = "semantic_proto",
    srcs = ["semantic.proto"],
)

py_proto_library(
    name = "semantic_py_pb2",
    deps = [
        ":semantic_proto",
    ],
)

cc_proto_library(
    name = "tracking_feature_cc_proto",
    deps = [
        ":tracking_feature_proto",
    ],
)

proto_library(
    name = "tracking_feature_proto",
    srcs = ["tracking_feature.proto"],
)

py_proto_library(
    name = "tracking_feature_py_pb2",
    deps = [
        ":tracking_feature_proto",
    ],
)

cc_proto_library(
    name = "center_point_detection_config_cc_proto",
    deps = [
        ":center_point_detection_config_proto",
    ],
)

proto_library(
    name = "center_point_detection_config_proto",
    srcs = ["center_point_detection_config.proto"],
)

py_proto_library(
    name = "center_point_detection_config_py_pb2",
    deps = [
        ":center_point_detection_config_proto",
    ],
)

cc_proto_library(
    name = "camera_detection_postprocessor_config_cc_proto",
    deps = [
        ":camera_detection_postprocessor_config_proto",
    ],
)

proto_library(
    name = "camera_detection_postprocessor_config_proto",
    srcs = ["camera_detection_postprocessor_config.proto"],
)

py_proto_library(
    name = "camera_detection_postprocessor_config_py_pb2",
    deps = [
        ":camera_detection_postprocessor_config_proto",
    ],
)

cc_proto_library(
    name = "bev_obstacle_detection_config_cc_proto",
    deps = [
        ":bev_obstacle_detection_config_proto",
    ],
)

proto_library(
    name = "bev_obstacle_detection_config_proto",
    srcs = ["bev_obstacle_detection_config.proto"],
)

py_proto_library(
    name = "bev_obstacle_detection_config_py_pb2",
    deps = [
        ":bev_obstacle_detection_config_proto",
    ],
)

cc_proto_library(
    name = "all_latest_fusion_config_cc_proto",
    deps = [
        ":all_latest_fusion_config_proto",
    ],
)

proto_library(
    name = "all_latest_fusion_config_proto",
    srcs = ["all_latest_fusion_config.proto"],
)

py_proto_library(
    name = "all_latest_fusion_config_py_pb2",
    deps = [
        ":all_latest_fusion_config_proto",
    ],
)

cc_proto_library(
    name = "detection_cc_proto",
    deps = [
        ":detection_proto",
    ],
)

proto_library(
    name = "detection_proto",
    srcs = ["detection.proto"],
)

py_proto_library(
    name = "detection_py_pb2",
    deps = [
        ":detection_proto",
    ],
)

cc_proto_library(
    name = "object_filter_bank_config_cc_proto",
    deps = [
        ":object_filter_bank_config_proto",
    ],
)

proto_library(
    name = "object_filter_bank_config_proto",
    srcs = ["object_filter_bank_config.proto"],
)

py_proto_library(
    name = "object_filter_bank_config_py_pb2",
    deps = [
        ":object_filter_bank_config_proto",
    ],
)

cc_proto_library(
    name = "mlf_engine_config_cc_proto",
    deps = [
        ":mlf_engine_config_proto",
    ],
)

proto_library(
    name = "mlf_engine_config_proto",
    srcs = ["mlf_engine_config.proto"],
)

py_proto_library(
    name = "mlf_engine_config_py_pb2",
    deps = [
        ":mlf_engine_config_proto",
    ],
)

cc_proto_library(
    name = "pointcloud_preprocessor_config_cc_proto",
    deps = [
        ":pointcloud_preprocessor_config_proto",
    ],
)

proto_library(
    name = "pointcloud_preprocessor_config_proto",
    srcs = ["pointcloud_preprocessor_config.proto"],
)

py_proto_library(
    name = "pointcloud_preprocessor_config_py_pb2",
    deps = [
        ":pointcloud_preprocessor_config_proto",
    ],
)

cc_proto_library(
    name = "singlestage_cc_proto",
    deps = [
        ":singlestage_proto",
    ],
)

proto_library(
    name = "singlestage_proto",
    srcs = ["singlestage.proto"],
)

py_proto_library(
    name = "singlestage_py_pb2",
    deps = [
        ":singlestage_proto",
    ],
)

cc_proto_library(
    name = "camera_detection_preprocessor_config_cc_proto",
    deps = [
        ":camera_detection_preprocessor_config_proto",
    ],
)

proto_library(
    name = "camera_detection_preprocessor_config_proto",
    srcs = ["camera_detection_preprocessor_config.proto"],
)

py_proto_library(
    name = "camera_detection_preprocessor_config_py_pb2",
    deps = [
        ":camera_detection_preprocessor_config_proto",
    ],
)

cc_proto_library(
    name = "denseline_postprocessor_cc_proto",
    deps = [
        ":denseline_postprocessor_proto",
    ],
)

proto_library(
    name = "denseline_postprocessor_proto",
    srcs = ["denseline_postprocessor.proto"],
)

py_proto_library(
    name = "denseline_postprocessor_py_pb2",
    deps = [
        ":denseline_postprocessor_proto",
    ],
)

cc_proto_library(
    name = "mask_pillars_detection_config_cc_proto",
    deps = [
        ":mask_pillars_detection_config_proto",
    ],
)

proto_library(
    name = "mask_pillars_detection_config_proto",
    srcs = ["mask_pillars_detection_config.proto"],
)

py_proto_library(
    name = "mask_pillars_detection_config_py_pb2",
    deps = [
        ":mask_pillars_detection_config_proto",
    ],
)

cc_proto_library(
    name = "multicue_cc_proto",
    deps = [
        ":multicue_proto",
    ],
)

proto_library(
    name = "multicue_proto",
    srcs = ["multicue.proto"],
)

py_proto_library(
    name = "multicue_py_pb2",
    deps = [
        ":multicue_proto",
    ],
)

cc_proto_library(
    name = "yolo_obstacle_detector_config_cc_proto",
    deps = [
        ":yolo_obstacle_detector_config_proto",
    ],
)

proto_library(
    name = "yolo_obstacle_detector_config_proto",
    srcs = ["yolo_obstacle_detector_config.proto"],
    deps = [
        "//modules/perception/camera/proto:yolo_proto",
    ],
)

py_proto_library(
    name = "yolo_obstacle_detector_config_py_pb2",
    deps = [
        ":yolo_obstacle_detector_config_proto",
        "//modules/perception/camera/proto:yolo_py_pb2",
    ],
)

cc_proto_library(
    name = "hdmap_roi_filter_config_cc_proto",
    deps = [
        ":hdmap_roi_filter_config_proto",
    ],
)

proto_library(
    name = "hdmap_roi_filter_config_proto",
    srcs = ["hdmap_roi_filter_config.proto"],
)

py_proto_library(
    name = "hdmap_roi_filter_config_py_pb2",
    deps = [
        ":hdmap_roi_filter_config_proto",
    ],
)

cc_proto_library(
    name = "omt_bev_cc_proto",
    deps = [
        ":omt_bev_proto",
    ],
)

proto_library(
    name = "omt_bev_proto",
    srcs = ["omt_bev.proto"],
)

py_proto_library(
    name = "omt_bev_py_pb2",
    deps = [
        ":omt_bev_proto",
    ],
)
